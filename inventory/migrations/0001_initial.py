# Generated by Django 2.1.5 on 2019-08-19 17:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('germ_date', models.DateField(default=django.utils.timezone.now)),
                ('grow_date', models.DateField(default=django.utils.timezone.now)),
                ('harvest_date', models.DateField(blank=True, null=True)),
                ('crop_yield', models.FloatField(blank=True, null=True)),
                ('leaf_wingspan', models.FloatField(blank=True, null=True)),
                ('seeding_density', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CropAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CropAttributeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('attribute_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='inventory.CropAttribute')),
            ],
        ),
        migrations.CreateModel(
            name='CropRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('record_type', models.CharField(choices=[('GERM', 'Started Germination Phase'), ('GROW', 'Started Grow Phase'), ('WATER', 'Watered'), ('HARVEST', 'Harvested'), ('TRASH', 'Trashed')], max_length=10)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('SEED', 'Seeded'), ('HARVEST', 'Harvested'), ('KILL', 'Killed')], max_length=10)),
                ('data', models.CharField(max_length=1000, null=True)),
                ('note', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SanitationRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('employee_name', models.CharField(max_length=25)),
                ('equipment_sanitized', models.CharField(max_length=100)),
                ('chemicals_used', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(blank=True, max_length=50, unique=True)),
                ('current_crop', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='current_slot', to='inventory.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Variety',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WeekdayRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_day', models.CharField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=1)),
                ('num_small', models.IntegerField(default=0)),
                ('num_medium', models.IntegerField(default=0)),
                ('num_big', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='InHouse',
            fields=[
                ('variety', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='inventory.Variety')),
                ('num_small', models.IntegerField(default=0)),
                ('num_medium', models.IntegerField(default=0)),
                ('num_big', models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='weekdayrequirement',
            name='variety',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.Variety'),
        ),
        migrations.AddField(
            model_name='inventoryaction',
            name='variety',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.Variety'),
        ),
        migrations.AddField(
            model_name='crop',
            name='attributes',
            field=models.ManyToManyField(related_name='crops', to='inventory.CropAttributeOption'),
        ),
        migrations.AddField(
            model_name='crop',
            name='variety',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.Variety'),
        ),
        migrations.AlterUniqueTogether(
            name='weekdayrequirement',
            unique_together={('plant_day', 'variety')},
        ),
    ]
